kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/Android/VoodooTest/voodoosdk/src/main/java/com/example/voodoosdk/ui/composables/ImageLoader.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at jdk.internal.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:ImageLoaderSubCompose visibility:public modality:FINAL <> (modifier:androidx.compose.ui.Modifier, data:kotlin.Any?, contentScale:androidx.compose.ui.layout.ContentScale, contentDescription:kotlin.String?, crossFadeDuration:kotlin.Int, loading:@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?, failure:@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?, success:@[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>?, onSuccess:kotlin.Function1<coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>, onError:kotlin.Function1<coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:modifier index:0 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:data index:1 type:kotlin.Any?
  VALUE_PARAMETER name:contentScale index:2 type:androidx.compose.ui.layout.ContentScale
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.layout.ContentScale
  VALUE_PARAMETER name:contentDescription index:3 type:kotlin.String?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.String?
  VALUE_PARAMETER name:crossFadeDuration index:4 type:kotlin.Int
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Int
  VALUE_PARAMETER name:loading index:5 type:@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?
  VALUE_PARAMETER name:failure index:6 type:@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?
  VALUE_PARAMETER name:success index:7 type:@[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=@[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>?
  VALUE_PARAMETER name:onSuccess index:8 type:kotlin.Function1<coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>
  VALUE_PARAMETER name:onError index:9 type:kotlin.Function1<coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>
  BLOCK_BODY
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=kotlin.Boolean origin=GET_PROPERTY
          $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
            CALL 'public final fun <get-LocalInspectionMode> (): androidx.compose.runtime.ProvidableCompositionLocal<kotlin.Boolean> declared in androidx.compose.ui.platform.InspectionModeKt' type=androidx.compose.runtime.ProvidableCompositionLocal<kotlin.Boolean> origin=GET_PROPERTY
        then: BLOCK type=kotlin.Unit origin=null
          BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp8_painter type:androidx.compose.ui.graphics.painter.Painter [val]
              CALL 'public final fun painterResource (id: kotlin.Int): androidx.compose.ui.graphics.painter.Painter declared in androidx.compose.ui.res.PainterResources_androidKt' type=androidx.compose.ui.graphics.painter.Painter origin=null
                id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:ic_error_24dp type:kotlin.Int visibility:public [static]' type=kotlin.Int origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp9_contentScale type:androidx.compose.ui.layout.ContentScale [val]
              CALL 'public final fun <get-Crop> (): androidx.compose.ui.layout.ContentScale declared in androidx.compose.ui.layout.ContentScale.Companion' type=androidx.compose.ui.layout.ContentScale origin=GET_PROPERTY
                $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.layout.ContentScale.Companion visibility:public [final,static]' type=androidx.compose.ui.layout.ContentScale.Companion origin=null
            CALL 'public final fun Image$default (painter: androidx.compose.ui.graphics.painter.Painter, contentDescription: kotlin.String?, modifier: androidx.compose.ui.Modifier?, alignment: androidx.compose.ui.Alignment?, contentScale: androidx.compose.ui.layout.ContentScale?, alpha: kotlin.Float, colorFilter: androidx.compose.ui.graphics.ColorFilter?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.foundation.ImageKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
              painter: GET_VAR 'val tmp8_painter: androidx.compose.ui.graphics.painter.Painter [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=androidx.compose.ui.graphics.painter.Painter origin=null
              contentDescription: GET_VAR 'contentDescription: kotlin.String? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=kotlin.String? origin=null
              modifier: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=androidx.compose.ui.Modifier origin=null
              alignment: COMPOSITE type=androidx.compose.ui.Alignment? origin=DEFAULT_VALUE
                CONST Null type=androidx.compose.ui.Alignment? value=null
              contentScale: GET_VAR 'val tmp9_contentScale: androidx.compose.ui.layout.ContentScale [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=androidx.compose.ui.layout.ContentScale origin=null
              alpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              colorFilter: COMPOSITE type=androidx.compose.ui.graphics.ColorFilter? origin=DEFAULT_VALUE
                CONST Null type=androidx.compose.ui.graphics.ColorFilter? value=null
              $mask0: CONST Int type=kotlin.Int value=104
              $handler: CONST Null type=kotlin.Any? value=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          VAR name:context type:android.content.Context [val]
            CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
              $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
                CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
          BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp13_model type:coil.request.ImageRequest [val]
              CALL 'public final fun build (): coil.request.ImageRequest declared in coil.request.ImageRequest.Builder' type=coil.request.ImageRequest origin=null
                $this: CALL 'public final fun crossfade (durationMillis: kotlin.Int): coil.request.ImageRequest.Builder declared in coil.request.ImageRequest.Builder' type=coil.request.ImageRequest.Builder origin=null
                  $this: CALL 'public final fun data (data: kotlin.Any?): coil.request.ImageRequest.Builder declared in coil.request.ImageRequest.Builder' type=coil.request.ImageRequest.Builder origin=null
                    $this: CONSTRUCTOR_CALL 'public constructor <init> (context: android.content.Context) declared in coil.request.ImageRequest.Builder' type=coil.request.ImageRequest.Builder origin=null
                      context: GET_VAR 'val context: android.content.Context [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=android.content.Context origin=null
                    data: GET_VAR 'data: kotlin.Any? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=kotlin.Any? origin=null
                  durationMillis: GET_VAR 'crossFadeDuration: kotlin.Int declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=kotlin.Int origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp14_loading type:@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? [val]
              BLOCK type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? origin=FOLDED_SAFE_CALL
                WHEN type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? origin=FOLDED_SAFE_CALL
                  BRANCH
                    if: COMPOSITE type=kotlin.Boolean origin=null
                      CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          arg0: GET_VAR 'loading: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? origin=null
                          arg1: CONST Null type=kotlin.Nothing? value=null
                    then: CALL 'public final fun run <T, R> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.run, R of kotlin.StandardKt.run>): R of kotlin.StandardKt.run [inline] declared in kotlin.StandardKt' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? origin=null
                      <T>: @[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>
                      <R>: @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>?
                      $receiver: GET_VAR 'loading: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? origin=null
                      block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>?> origin=LAMBDA
                        COMPOSITE type=kotlin.Unit origin=null
                        FUNCTION_REFERENCE 'private final fun ImageLoaderSubCompose$lambda$3 ($loading: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?): @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt' type=@[ExtensionFunctionType] kotlin.Function1<@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>?> origin=INLINE_LAMBDA reflectionTarget=null
                          $loading: GET_VAR 'loading: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CONST Null type=kotlin.Nothing? value=null
            VAR IR_TEMPORARY_VARIABLE name:tmp15_error type:@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? [val]
              BLOCK type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? origin=FOLDED_SAFE_CALL
                WHEN type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? origin=FOLDED_SAFE_CALL
                  BRANCH
                    if: COMPOSITE type=kotlin.Boolean origin=null
                      CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          arg0: GET_VAR 'failure: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? origin=null
                          arg1: CONST Null type=kotlin.Nothing? value=null
                    then: CALL 'public final fun run <T, R> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.run, R of kotlin.StandardKt.run>): R of kotlin.StandardKt.run [inline] declared in kotlin.StandardKt' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? origin=null
                      <T>: @[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>
                      <R>: @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>?
                      $receiver: GET_VAR 'failure: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? origin=null
                      block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>?> origin=LAMBDA
                        COMPOSITE type=kotlin.Unit origin=null
                        FUNCTION_REFERENCE 'private final fun ImageLoaderSubCompose$lambda$5 ($failure: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>?): @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt' type=@[ExtensionFunctionType] kotlin.Function1<@[ExtensionFunctionType] @[Composable] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>?> origin=INLINE_LAMBDA reflectionTarget=null
                          $failure: GET_VAR 'failure: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>? origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CONST Null type=kotlin.Nothing? value=null
            VAR IR_TEMPORARY_VARIABLE name:tmp16_success type:@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? [val]
              BLOCK type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? origin=FOLDED_SAFE_CALL
                WHEN type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? origin=FOLDED_SAFE_CALL
                  BRANCH
                    if: COMPOSITE type=kotlin.Boolean origin=null
                      CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          arg0: GET_VAR 'success: @[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>? origin=null
                          arg1: CONST Null type=kotlin.Nothing? value=null
                    then: CALL 'public final fun run <T, R> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.run, R of kotlin.StandardKt.run>): R of kotlin.StandardKt.run [inline] declared in kotlin.StandardKt' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? origin=null
                      <T>: @[ExtensionFunctionType] @[Composable] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>
                      <R>: @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>?
                      $receiver: GET_VAR 'success: @[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>? origin=null
                      block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<@[ExtensionFunctionType] @[Composable] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>, @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>?> origin=LAMBDA
                        COMPOSITE type=kotlin.Unit origin=null
                        FUNCTION_REFERENCE 'private final fun ImageLoaderSubCompose$lambda$7 ($success: @[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>?): @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt' type=@[ExtensionFunctionType] kotlin.Function1<@[ExtensionFunctionType] @[Composable] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>, @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>?> origin=INLINE_LAMBDA reflectionTarget=null
                          $success: GET_VAR 'success: @[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[Composable] @[ExtensionFunctionType] kotlin.Function2<androidx.compose.foundation.layout.BoxScope, android.graphics.drawable.Drawable, kotlin.Unit>? origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: CONST Null type=kotlin.Nothing? value=null
            CALL 'public final fun SubcomposeAsyncImage-F2YMtjE$default (model: kotlin.Any?, contentDescription: kotlin.String?, modifier: androidx.compose.ui.Modifier?, transform: kotlin.Function1<coil.compose.AsyncImagePainter.State, coil.compose.AsyncImagePainter.State>?, loading: @[Composable] @[ExtensionFunctionType] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>?, success: @[Composable] @[ExtensionFunctionType] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>?, error: @[Composable] @[ExtensionFunctionType] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>?, onLoading: kotlin.Function1<coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>?, onSuccess: kotlin.Function1<coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>?, onError: kotlin.Function1<coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>?, alignment: androidx.compose.ui.Alignment?, contentScale: androidx.compose.ui.layout.ContentScale?, alpha: kotlin.Float, colorFilter: androidx.compose.ui.graphics.ColorFilter?, filterQuality: androidx.compose.ui.graphics.FilterQuality, clipToBounds: kotlin.Boolean, modelEqualityDelegate: coil.compose.EqualityDelegate?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in coil.compose.SingletonSubcomposeAsyncImageKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
              model: GET_VAR 'val tmp13_model: coil.request.ImageRequest [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=coil.request.ImageRequest origin=null
              contentDescription: GET_VAR 'contentDescription: kotlin.String? declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=kotlin.String? origin=null
              modifier: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=androidx.compose.ui.Modifier origin=null
              transform: COMPOSITE type=kotlin.Function1<coil.compose.AsyncImagePainter.State, coil.compose.AsyncImagePainter.State>? origin=DEFAULT_VALUE
                CONST Null type=kotlin.Function1<coil.compose.AsyncImagePainter.State, coil.compose.AsyncImagePainter.State>? value=null
              loading: GET_VAR 'val tmp14_loading: @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? origin=null
              success: GET_VAR 'val tmp16_success: @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Success, kotlin.Unit>? origin=null
              error: GET_VAR 'val tmp15_error: @[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? [val] declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=@[ExtensionFunctionType] @[Composable] kotlin.Function2<coil.compose.SubcomposeAsyncImageScope, coil.compose.AsyncImagePainter.State.Error, kotlin.Unit>? origin=null
              onLoading: COMPOSITE type=kotlin.Function1<coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? origin=DEFAULT_VALUE
                CONST Null type=kotlin.Function1<coil.compose.AsyncImagePainter.State.Loading, kotlin.Unit>? value=null
              onSuccess: GET_VAR 'onSuccess: kotlin.Function1<coil.compose.AsyncImagePainter.State.Success, kotlin.Unit> declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=kotlin.Function1<coil.compose.AsyncImagePainter.State.Success, kotlin.Unit> origin=null
              onError: GET_VAR 'onError: kotlin.Function1<coil.compose.AsyncImagePainter.State.Error, kotlin.Unit> declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=kotlin.Function1<coil.compose.AsyncImagePainter.State.Error, kotlin.Unit> origin=null
              alignment: COMPOSITE type=androidx.compose.ui.Alignment? origin=DEFAULT_VALUE
                CONST Null type=androidx.compose.ui.Alignment? value=null
              contentScale: GET_VAR 'contentScale: androidx.compose.ui.layout.ContentScale declared in com.example.voodoosdk.ui.composables.ImageLoaderKt.ImageLoaderSubCompose' type=androidx.compose.ui.layout.ContentScale origin=null
              alpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              colorFilter: COMPOSITE type=androidx.compose.ui.graphics.ColorFilter? origin=DEFAULT_VALUE
                CONST Null type=androidx.compose.ui.graphics.ColorFilter? value=null
              filterQuality: COMPOSITE type=androidx.compose.ui.graphics.FilterQuality origin=DEFAULT_VALUE
                CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.FilterQuality origin=null
                  <T>: kotlin.Int
                  <R>: androidx.compose.ui.graphics.FilterQuality
                  v: CONST Int type=kotlin.Int value=0
              clipToBounds: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
                CONST Boolean type=kotlin.Boolean value=false
              modelEqualityDelegate: COMPOSITE type=coil.compose.EqualityDelegate? origin=DEFAULT_VALUE
                CONST Null type=coil.compose.EqualityDelegate? value=null
              $mask0: CONST Int type=kotlin.Int value=128136
              $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=kotlin.Boolean origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1092)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 54 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 69 more


